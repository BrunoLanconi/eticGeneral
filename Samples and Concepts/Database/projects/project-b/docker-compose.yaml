services:
  database:
    image: postgres
    restart: always
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
    networks:
      - app-network

  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
      - ./mongo/initdb.d:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_DATABASE: db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app-network

  adminer:
    image: adminer
    restart: always
    links:
      - database:db
    ports:
      - 5433:8080
    networks:
      - app-network
    depends_on:
      - database

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false  
    networks:
      - app-network
    depends_on:
      - mongo

  django-app:
    build:
      context: ./django-app
      dockerfile: ../ops/django-app.Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./django-app:/app
    command: bash -c "poetry run python manage.py migrate && poetry run gunicorn -w 20 -b 0.0.0.0:8000 --reload setup.wsgi"
    environment:
      MONGO_DB: db
      MONGO_HOST: mongo
      MONGO_PASSWORD: example
      MONGO_PORT: 27017
      MONGO_USERNAME: root
      POSTGRES_DB: db
      POSTGRES_HOST: database
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
    networks:
      - app-network
    depends_on:
      - database
      - mongo

volumes:
  data:
  mongo-data:
  mongo-config:

networks:
  app-network:
    driver: bridge